generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "foreignKeys"
}

model session {
  id                    Int     @id @default(autoincrement())
  userId                Int     @unique(map: "Session_userId_key")
  refreshToken          String
  refreshTokenExpiresAt String?
  user                  user    @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Session_userId_fkey")
}

model shoppingitem {
  id                 Int                  @id @default(autoincrement())
  name               String
  note               String?
  imageUrl           String?
  category           String
  createdAt          DateTime
  userId             Int
  user               user                 @relation(fields: [userId], references: [id], onDelete: Cascade, map: "ShoppingItem_userId_fkey")
  shoppingLists shoppingitemtolist[]

  @@index([userId], map: "ShoppingItem_userId_fkey")
}

model shoppingitemtolist {
  shoppingItemId Int
  shoppingListId Int
  quantity       Int
  itemName       String
  itemCategory   String
  assignedBy     Int
  assignedAt     DateTime
  itemPurchased  Boolean
  shoppingitem   shoppingitem @relation(fields: [shoppingItemId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ShoppingItemToList_shoppingItemId_fkey")
  shoppinglist   shoppinglist @relation(fields: [shoppingListId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ShoppingItemToList_shoppingListId_fkey")

  @@id([shoppingListId, shoppingItemId])
  @@index([shoppingItemId], map: "ShoppingItemToList_shoppingItemId_fkey")
}

model shoppinglist {
  id                 Int                  @id @default(autoincrement())
  name               String
  status             String
  createdAt          DateTime
  updatedAt          DateTime
  userId             Int
  shoppingItems      shoppingitemtolist[]
  user               user                 @relation(fields: [userId], references: [id], onDelete: Cascade, map: "ShoppingList_userId_fkey")

  @@index([userId], map: "ShoppingList_userId_fkey")
}

model user {
  id           Int            @id @default(autoincrement())
  email        String         @unique(map: "User_email_key")
  name         String
  avatar       String
  password     String
  updatedAt    DateTime?
  createdAt    DateTime
  session      session?
  shoppingItems shoppingitem[]
  shoppingLists shoppinglist[]
}
